version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: trade_marketing
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trade-marketing-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trade-marketing-network

  mongodb:
    image: mongo:6
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - trade-marketing-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - trade-marketing-network

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - trade-marketing-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - trade-marketing-network

  # Microservices
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-key
    depends_on:
      - redis
      - company-service
      - identity-service
    networks:
      - trade-marketing-network

  company-service:
    build:
      context: ./backend/company-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/trade_marketing
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - trade-marketing-network

  identity-service:
    build:
      context: ./backend/identity-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/trade_marketing
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-key
    depends_on:
      - postgres
      - redis
    networks:
      - trade-marketing-network

  trade-marketing-service:
    build:
      context: ./backend/trade-marketing-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/trade_marketing
      - MONGODB_URL=mongodb://admin:admin123@mongodb:27017/trade_marketing?authSource=admin
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - mongodb
      - redis
      - kafka
    networks:
      - trade-marketing-network

  analytics-service:
    build:
      context: ./backend/analytics-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/trade_marketing
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - kafka
    networks:
      - trade-marketing-network

  integration-service:
    build:
      context: ./backend/integration-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/trade_marketing
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - trade-marketing-network

  notification-service:
    build:
      context: ./backend/notification-service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - PORT=3006
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/trade_marketing
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - trade-marketing-network

  file-service:
    build:
      context: ./backend/file-service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - PORT=3007
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/trade_marketing
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=your-aws-access-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret-key
      - AWS_REGION=us-east-1
      - S3_BUCKET=trade-marketing-files
    depends_on:
      - postgres
      - redis
    networks:
      - trade-marketing-network

  # Frontend Applications
  web-app:
    build:
      context: ./frontend/web-app
      dockerfile: Dockerfile
    ports:
      - "54121:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_WS_URL=ws://localhost:3000
    depends_on:
      - api-gateway
    networks:
      - trade-marketing-network

  admin-portal:
    build:
      context: ./frontend/admin-portal
      dockerfile: Dockerfile
    ports:
      - "55491:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    depends_on:
      - api-gateway
    networks:
      - trade-marketing-network

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  elasticsearch_data:

networks:
  trade-marketing-network:
    driver: bridge